---
// AdminNavbar.astro - Navbar específico para el panel de administración
---

<nav class="bg-white border-b border-gray-200 shadow-sm sticky top-0 z-40">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      
      <!-- Logo y título del admin -->
      <div class="flex items-center gap-2 sm:gap-4">
        <div class="flex items-center gap-2 sm:gap-3">
          <div class="w-8 h-8 sm:w-8 sm:h-8 bg-gradient-to-br from-pink-500 to-purple-600 rounded-lg flex items-center justify-center">
            <span class="text-white text-base sm:text-lg font-bold">G</span>
          </div>
          <div class="hidden xs:block">
            <h1 class="text-lg sm:text-xl font-bold text-gray-800 font-poppins">GlamBook</h1>
            <p class="text-xs text-gray-500 font-poppins hidden sm:block">Panel de Administración</p>
          </div>
        </div>
      </div>

      <!-- Navegación central -->
      <div class="hidden md:flex items-center space-x-6">
        <a 
          href="/admin" 
          class="flex items-center gap-2 px-3 py-2 rounded-lg text-gray-700 hover:text-pink-600 hover:bg-pink-50 transition-colors duration-200 font-poppins admin-nav-link"
          data-page="dashboard"
        >
          <span class="text-lg">📊</span>
          Dashboard
        </a>
        
        <a 
          href="#testimonios" 
          class="flex items-center gap-2 px-3 py-2 rounded-lg text-gray-700 hover:text-pink-600 hover:bg-pink-50 transition-colors duration-200 font-poppins admin-nav-link"
          data-page="testimonios"
        >
          <span class="text-lg">💬</span>
          Testimonios
        </a>
        
        <a 
          href="#citas" 
          class="flex items-center gap-2 px-3 py-2 rounded-lg text-gray-700 hover:text-pink-600 hover:bg-pink-50 transition-colors duration-200 font-poppins admin-nav-link"
          data-page="citas"
        >
          <span class="text-lg">�</span>
          Citas
        </a>
        
        <a 
          href="#usuarios" 
          class="flex items-center gap-2 px-3 py-2 rounded-lg text-gray-700 hover:text-pink-600 hover:bg-pink-50 transition-colors duration-200 font-poppins admin-nav-link"
          data-page="usuarios"
        >
          <span class="text-lg">👥</span>
          Usuarios
        </a>
      </div>

      <!-- Acciones del usuario -->
      <div class="flex items-center gap-1 sm:gap-3">
        
        <!-- Botón de actualizar -->
        <button 
          id="admin-refresh-btn"
          class="p-2 sm:p-2 text-gray-500 hover:text-pink-600 hover:bg-pink-50 rounded-lg transition-colors duration-200 touch-manipulation"
          title="Actualizar datos"
        >
          <span id="admin-refresh-icon" class="text-lg sm:text-lg">🔄</span>
        </button>

        <!-- Notificaciones -->
        <div class="relative">
          <button 
            id="notifications-btn"
            class="p-2 sm:p-2 text-gray-500 hover:text-pink-600 hover:bg-pink-50 rounded-lg transition-colors duration-200 relative touch-manipulation"
            title="Notificaciones"
          >
            <span class="text-lg sm:text-lg">🔔</span>
            <span id="notification-badge" class="absolute -top-1 -right-1 w-4 h-4 sm:w-4 sm:h-4 bg-red-500 text-white text-xs rounded-full items-center justify-center hidden">
              0
            </span>
          </button>
        </div>

        <!-- Menú del usuario -->
        <div class="relative">
          <button 
            id="user-menu-btn"
            class="flex items-center gap-1 sm:gap-2 p-1 sm:p-2 text-gray-700 hover:text-pink-600 hover:bg-pink-50 rounded-lg transition-colors duration-200 touch-manipulation"
          >
            <div class="w-8 h-8 sm:w-8 sm:h-8 bg-gradient-to-br from-pink-200 to-purple-200 rounded-full flex items-center justify-center">
              <span class="text-base sm:text-lg">👤</span>
            </div>
            <span class="hidden sm:block font-poppins text-sm" id="user-email">Admin</span>
            <span class="text-sm hidden sm:block">⌄</span>
          </button>

          <!-- Dropdown del usuario -->
          <div 
            id="user-dropdown" 
            class="absolute right-0 mt-2 w-64 sm:w-56 bg-white rounded-lg shadow-lg border border-gray-200 py-2 z-50 hidden"
          >
            <div class="px-4 py-3 border-b border-gray-100">
              <p class="text-sm font-medium text-gray-800 font-poppins">Administrador</p>
              <p class="text-xs text-gray-500 font-poppins truncate" id="dropdown-user-email">admin@glambook.com</p>
            </div>
            
            <a 
              href="/cambiar-password" 
              class="flex items-center gap-3 px-4 py-3 text-sm text-gray-700 hover:bg-pink-50 hover:text-pink-600 transition-colors duration-200 font-poppins touch-manipulation"
            >
              <span class="text-base">🔑</span>
              Cambiar Contraseña
            </a>
            
            <a 
              href="/" 
              target="_blank"
              class="flex items-center gap-3 px-4 py-3 text-sm text-gray-700 hover:bg-pink-50 hover:text-pink-600 transition-colors duration-200 font-poppins touch-manipulation"
            >
              <span class="text-base">🌐</span>
              Ver Sitio Web
            </a>
            
            <hr class="my-2 border-gray-100">
            
            <button 
              id="admin-logout-btn"
              class="flex items-center gap-3 px-4 py-3 text-sm text-red-600 hover:bg-red-50 transition-colors duration-200 font-poppins w-full text-left touch-manipulation"
            >
              <span class="text-base">🚪</span>
              Cerrar Sesión
            </button>
          </div>
        </div>

        <!-- Botón de menú móvil -->
        <button 
          id="mobile-menu-btn"
          class="md:hidden p-2 text-gray-500 hover:text-pink-600 hover:bg-pink-50 rounded-lg transition-all duration-200 touch-manipulation ml-1"
          aria-label="Abrir menú de navegación"
        >
          <span id="mobile-menu-icon" class="text-xl block transition-transform duration-300">☰</span>
        </button>
      </div>
    </div>

    <!-- Menú móvil -->
    <div id="mobile-menu" class="md:hidden hidden border-t border-gray-200 bg-white overflow-hidden transition-all duration-300 ease-in-out">
      <div class="py-4 space-y-1">
        <!-- Información del usuario en móvil -->
        <div class="px-4 py-3 border-b border-gray-100 mb-2">
          <div class="flex items-center gap-3">
            <div class="w-10 h-10 bg-gradient-to-br from-pink-200 to-purple-200 rounded-full flex items-center justify-center">
              <span class="text-lg">👤</span>
            </div>
            <div>
              <p class="text-sm font-medium text-gray-800 font-poppins" id="mobile-user-name">Administrador</p>
              <p class="text-xs text-gray-500 font-poppins truncate" id="mobile-user-email">admin@glambook.com</p>
            </div>
          </div>
        </div>

        <!-- Navegación principal -->
        <a 
          href="/admin" 
          class="flex items-center gap-3 px-4 py-3 text-gray-700 hover:text-pink-600 hover:bg-pink-50 transition-colors duration-200 font-poppins touch-manipulation mobile-nav-link"
          data-page="dashboard"
        >
          <span class="text-xl">📊</span>
          <span class="font-medium">Dashboard</span>
        </a>
        
        <a 
          href="#testimonios" 
          class="flex items-center gap-3 px-4 py-3 text-gray-700 hover:text-pink-600 hover:bg-pink-50 transition-colors duration-200 font-poppins touch-manipulation mobile-nav-link"
          data-page="testimonios"
        >
          <span class="text-xl">💬</span>
          <span class="font-medium">Testimonios</span>
        </a>
        
        <a 
          href="#citas" 
          class="flex items-center gap-3 px-4 py-3 text-gray-700 hover:text-pink-600 hover:bg-pink-50 transition-colors duration-200 font-poppins touch-manipulation mobile-nav-link"
          data-page="citas"
        >
          <span class="text-xl">�</span>
          <span class="font-medium">Citas</span>
        </a>
        
        <a 
          href="#usuarios" 
          class="flex items-center gap-3 px-4 py-3 text-gray-700 hover:text-pink-600 hover:bg-pink-50 transition-colors duration-200 font-poppins touch-manipulation mobile-nav-link"
          data-page="usuarios"
        >
          <span class="text-xl">👥</span>
          <span class="font-medium">Usuarios</span>
        </a>

        <!-- Separador -->
        <hr class="my-3 border-gray-100">

        <!-- Acciones rápidas -->
        <div class="px-4 py-2">
          <p class="text-xs font-medium text-gray-500 font-poppins uppercase tracking-wide mb-2">Acciones</p>
        </div>

        <button 
          id="mobile-refresh-btn"
          class="flex items-center gap-3 px-4 py-3 text-blue-600 hover:text-blue-700 hover:bg-blue-50 transition-colors duration-200 font-poppins touch-manipulation w-full text-left"
        >
          <span class="text-xl" id="mobile-refresh-icon">🔄</span>
          <span class="font-medium">Actualizar Datos</span>
        </button>

        <a 
          href="/cambiar-password" 
          class="flex items-center gap-3 px-4 py-3 text-gray-700 hover:text-pink-600 hover:bg-pink-50 transition-colors duration-200 font-poppins touch-manipulation"
        >
          <span class="text-xl">🔑</span>
          <span class="font-medium">Cambiar Contraseña</span>
        </a>
        
        <a 
          href="/" 
          target="_blank"
          class="flex items-center gap-3 px-4 py-3 text-gray-700 hover:text-pink-600 hover:bg-pink-50 transition-colors duration-200 font-poppins touch-manipulation"
        >
          <span class="text-xl">🌐</span>
          <span class="font-medium">Ver Sitio Web</span>
        </a>
        
        <!-- Separador -->
        <hr class="my-3 border-gray-100">
        
        <button 
          id="mobile-logout-btn"
          class="flex items-center gap-3 px-4 py-3 text-red-600 hover:text-red-700 hover:bg-red-50 transition-colors duration-200 font-poppins touch-manipulation w-full text-left"
        >
          <span class="text-xl">🚪</span>
          <span class="font-medium">Cerrar Sesión</span>
        </button>
      </div>
    </div>
  </div>
</nav>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap');
  
  .font-poppins {
    font-family: 'Poppins', sans-serif;
  }

  /* Breakpoint personalizado para pantallas muy pequeñas */
  @media (min-width: 475px) {
    .xs\:block {
      display: block;
    }
  }

  /* Touch optimization */
  .touch-manipulation {
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
  }

  /* Indicador de página activa */
  .admin-nav-link.active,
  .mobile-nav-link.active {
    background-color: rgb(252 231 243); /* bg-pink-50 */
    color: rgb(219 39 119); /* text-pink-600 */
    font-weight: 600;
  }

  /* Animaciones para navegación desktop */
  .admin-nav-link {
    position: relative;
    overflow: hidden;
  }

  .admin-nav-link::before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 0;
    height: 2px;
    background: linear-gradient(90deg, rgb(219 39 119), rgb(147 51 234));
    transition: all 0.3s ease;
    transform: translateX(-50%);
  }

  .admin-nav-link.active::before,
  .admin-nav-link:hover::before {
    width: 100%;
  }

  /* Efectos hover mejorados para desktop */
  @media (min-width: 768px) {
    .admin-nav-link:hover {
      transform: translateY(-1px);
    }
  }

  /* Indicador visual para enlaces móviles */
  .mobile-nav-link.active {
    border-left: 4px solid rgb(219 39 119);
    padding-left: calc(1rem - 4px);
  }

  /* Animación del ícono del menú móvil */
  #mobile-menu-icon {
    transition: transform 0.3s ease;
  }

  .mobile-menu-open #mobile-menu-icon {
    transform: rotate(90deg);
  }

  /* Animación del menú móvil */
  #mobile-menu {
    max-height: 0;
    opacity: 0;
  }

  #mobile-menu.show {
    max-height: 100vh;
    opacity: 1;
  }

  /* Dropdown animation */
  #user-dropdown {
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.2s ease;
  }

  #user-dropdown.show {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  /* Badge notification pulse */
  #notification-badge {
    animation: pulse 2s infinite;
  }

  #notification-badge:not(.hidden) {
    display: flex;
  }

  @keyframes pulse {
    0%, 100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.1);
    }
  }

  /* Mejoras específicas para móvil */
  @media (max-width: 767px) {
    /* Hacer el navbar más compacto en móviles muy pequeños */
    .navbar-container {
      padding-left: 0.75rem;
      padding-right: 0.75rem;
    }

    /* Asegurar que los botones tengan suficiente área táctil */
    button, a {
      min-height: 44px;
      min-width: 44px;
    }

    /* Dropdown del usuario en móvil */
    #user-dropdown {
      position: fixed;
      right: 1rem;
      left: 1rem;
      width: auto;
      max-width: none;
    }

    /* Menú móvil con sombra */
    #mobile-menu {
      box-shadow: inset 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }
  }

  /* Animaciones específicas para elementos táctiles */
  @media (hover: none) and (pointer: coarse) {
    button:active,
    a:active {
      transform: scale(0.98);
      transition: transform 0.1s ease;
    }
  }

  /* Focus styles para accesibilidad */
  button:focus-visible,
  a:focus-visible {
    outline: 2px solid rgb(219 39 119);
    outline-offset: 2px;
  }
</style>

<script>
  // Variables globales del navbar
  let currentUser: any = null;
  let pendingTestimoniosCount = 0;

  // Elementos del DOM
  const userMenuBtn = document.getElementById('user-menu-btn');
  const userDropdown = document.getElementById('user-dropdown');
  const mobileMenuBtn = document.getElementById('mobile-menu-btn');
  const mobileMenu = document.getElementById('mobile-menu');
  const mobileMenuIcon = document.getElementById('mobile-menu-icon');
  const adminLogoutBtn = document.getElementById('admin-logout-btn');
  const mobileLogoutBtn = document.getElementById('mobile-logout-btn');
  const adminRefreshBtn = document.getElementById('admin-refresh-btn');
  const mobileRefreshBtn = document.getElementById('mobile-refresh-btn');
  const adminRefreshIcon = document.getElementById('admin-refresh-icon');
  const mobileRefreshIcon = document.getElementById('mobile-refresh-icon');
  const notificationBadge = document.getElementById('notification-badge');
  const userEmail = document.getElementById('user-email');
  const dropdownUserEmail = document.getElementById('dropdown-user-email');
  const mobileUserName = document.getElementById('mobile-user-name');
  const mobileUserEmail = document.getElementById('mobile-user-email');

  // Inicializar navbar
  document.addEventListener('DOMContentLoaded', () => {
    initializeAdminNavbar();
  });

  // Función para inicializar el navbar admin
  async function initializeAdminNavbar() {
    try {
      // Obtener usuario actual
      const { AuthService } = await import('../lib/authService');
      currentUser = await AuthService.getCurrentUser();
      
      if (currentUser) {
        updateUserInfo(currentUser);
      }

      // Configurar event listeners
      setupEventListeners();
      
      // Marcar página activa
      setActivePage();
      
      // Configurar auto-refresh
      setupAutoRefresh();
      
    } catch (error) {
      console.error('Error inicializando navbar admin:', error);
    }
  }

  // Actualizar información del usuario
  function updateUserInfo(user: any) {
    const username = user.email?.split('@')[0] || 'Admin';
    const email = user.email || 'admin@glambook.com';
    
    if (userEmail) {
      userEmail.textContent = username;
    }
    
    if (dropdownUserEmail) {
      dropdownUserEmail.textContent = email;
    }

    if (mobileUserName) {
      mobileUserName.textContent = 'Administrador';
    }

    if (mobileUserEmail) {
      mobileUserEmail.textContent = email;
    }
  }

  // Configurar event listeners
  function setupEventListeners() {
    // Toggle del menú de usuario
    userMenuBtn?.addEventListener('click', (e) => {
      e.stopPropagation();
      toggleUserDropdown();
    });

    // Toggle del menú móvil
    mobileMenuBtn?.addEventListener('click', () => {
      toggleMobileMenu();
    });

    // Cerrar dropdowns al hacer click fuera
    document.addEventListener('click', (e) => {
      if (!userMenuBtn?.contains(e.target as Node) && !userDropdown?.contains(e.target as Node)) {
        closeUserDropdown();
      }
      
      // Cerrar menú móvil al hacer click fuera
      if (!mobileMenuBtn?.contains(e.target as Node) && !mobileMenu?.contains(e.target as Node)) {
        closeMobileMenu();
      }
    });

    // Logout - múltiples botones
    adminLogoutBtn?.addEventListener('click', handleAdminLogout);
    mobileLogoutBtn?.addEventListener('click', handleAdminLogout);

    // Refresh - múltiples botones
    adminRefreshBtn?.addEventListener('click', handleAdminRefresh);
    mobileRefreshBtn?.addEventListener('click', handleMobileRefresh);

    // Navegación suave para anchors (desktop y móvil)
    document.querySelectorAll('.admin-nav-link[href^="#"], .mobile-nav-link[href^="#"]').forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        const target = (e.currentTarget as HTMLAnchorElement).getAttribute('href');
        if (target && target !== '#') {
          const sectionId = target.substring(1);
          
          // Usar función global si está disponible
          if (typeof (window as any).showTab === 'function') {
            (window as any).showTab(sectionId + '-tab');
          } else {
            scrollToSection(sectionId);
          }
          
          // Cerrar menú móvil después de navegar
          closeMobileMenu();
        }
      });
    });

    // Cerrar menú móvil al redimensionar pantalla
    window.addEventListener('resize', () => {
      if (window.innerWidth >= 768) {
        closeMobileMenu();
      }
    });
  }

  // Toggle dropdown de usuario
  function toggleUserDropdown() {
    if (userDropdown?.classList.contains('hidden')) {
      openUserDropdown();
    } else {
      closeUserDropdown();
    }
  }

  // Abrir dropdown de usuario
  function openUserDropdown() {
    userDropdown?.classList.remove('hidden');
    setTimeout(() => {
      userDropdown?.classList.add('show');
    }, 10);
  }

  // Cerrar dropdown de usuario
  function closeUserDropdown() {
    userDropdown?.classList.remove('show');
    setTimeout(() => {
      userDropdown?.classList.add('hidden');
    }, 200);
  }

  // Toggle menú móvil
  function toggleMobileMenu() {
    if (mobileMenu?.classList.contains('hidden')) {
      openMobileMenu();
    } else {
      closeMobileMenu();
    }
  }

  // Abrir menú móvil
  function openMobileMenu() {
    mobileMenu?.classList.remove('hidden');
    setTimeout(() => {
      mobileMenu?.classList.add('show');
    }, 10);
    
    // Añadir clase para rotar el ícono
    mobileMenuBtn?.classList.add('mobile-menu-open');
    
    // Cambiar ícono
    if (mobileMenuIcon) {
      mobileMenuIcon.textContent = '✕';
    }
  }

  // Cerrar menú móvil
  function closeMobileMenu() {
    mobileMenu?.classList.remove('show');
    setTimeout(() => {
      mobileMenu?.classList.add('hidden');
    }, 300);
    
    // Remover clase para rotar el ícono
    mobileMenuBtn?.classList.remove('mobile-menu-open');
    
    // Restaurar ícono
    if (mobileMenuIcon) {
      mobileMenuIcon.textContent = '☰';
    }
  }

  // Manejar logout desde navbar
  async function handleAdminLogout() {
    try {
      const { AuthService } = await import('../lib/authService');
      await AuthService.signOut();
      window.location.href = '/login';
    } catch (error) {
      console.error('Error al cerrar sesión:', error);
      window.location.href = '/login';
    }
  }

  // Manejar refresh desde navbar
  async function handleAdminRefresh() {
    if (adminRefreshIcon) {
      adminRefreshIcon.textContent = '⏳';
      
      // Llamar a la función global de refresh si existe
      if (typeof (window as any).cargarTestimoniosPendientes === 'function') {
        await (window as any).cargarTestimoniosPendientes();
      }
      
      setTimeout(() => {
        if (adminRefreshIcon) {
          adminRefreshIcon.textContent = '🔄';
        }
      }, 1000);
    }
  }

  // Manejar refresh desde móvil
  async function handleMobileRefresh() {
    if (mobileRefreshIcon) {
      mobileRefreshIcon.textContent = '⏳';
      
      // Llamar a la función global de refresh si existe
      if (typeof (window as any).cargarTestimoniosPendientes === 'function') {
        await (window as any).cargarTestimoniosPendientes();
      }
      
      setTimeout(() => {
        if (mobileRefreshIcon) {
          mobileRefreshIcon.textContent = '🔄';
        }
      }, 1000);
    }
    
    // Cerrar menú móvil después del refresh
    closeMobileMenu();
  }

  // Marcar página activa basada en la URL
  function setActivePage() {
    const currentPath = window.location.pathname;
    const currentHash = window.location.hash;
    
    // Limpiar clases activas
    document.querySelectorAll('.admin-nav-link, .mobile-nav-link').forEach(link => {
      link.classList.remove('active');
    });
    
    // Marcar enlaces activos
    document.querySelectorAll('.admin-nav-link, .mobile-nav-link').forEach(link => {
      const href = link.getAttribute('href');
      if (href === currentPath || (href?.startsWith('#') && href === currentHash)) {
        link.classList.add('active');
      }
    });

    // Si estamos en /admin sin hash, marcar dashboard como activo
    if (currentPath === '/admin' && !currentHash) {
      document.querySelectorAll('.admin-nav-link[data-page="dashboard"], .mobile-nav-link[data-page="dashboard"]').forEach(link => {
        link.classList.add('active');
      });
    }
  }

  // Scroll suave a sección
  function scrollToSection(sectionId: string) {
    const element = document.getElementById(sectionId);
    if (element) {
      element.scrollIntoView({ 
        behavior: 'smooth',
        block: 'start'
      });
      
      // Actualizar URL sin recargar página
      history.pushState(null, '', `#${sectionId}`);
      
      // Actualizar navegación activa
      setTimeout(setActivePage, 100);
    }
  }

  // Configurar auto-refresh
  function setupAutoRefresh() {
    // Actualizar badge de notificaciones cada 30 segundos
    setInterval(async () => {
      try {
        const response = await fetch('/api/testimonios?action=pendientes');
        if (response.ok) {
          const data = await response.json();
          const count = Array.isArray(data) ? data.length : 0;
          updateNotificationBadge(count);
        }
      } catch (error) {
        console.error('Error actualizando notificaciones:', error);
      }
    }, 30000);
  }

  // Actualizar badge de notificaciones
  function updateNotificationBadge(count: number) {
    if (notificationBadge) {
      if (count > 0) {
        notificationBadge.textContent = count.toString();
        notificationBadge.classList.remove('hidden');
      } else {
        notificationBadge.classList.add('hidden');
      }
    }
  }

  // Hacer funciones disponibles globalmente para uso externo
  (window as any).adminNavbar = {
    updateNotificationBadge,
    setActivePage,
    updateUserInfo
  };

  // Escuchar cambios de hash para actualizar navegación
  window.addEventListener('hashchange', setActivePage);
</script>