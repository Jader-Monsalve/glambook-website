---
// CSS importado globalmente en Layout.astro
---

<section class="py-16 bg-white">
  <div class="container mx-auto px-4">
    
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 max-w-6xl mx-auto items-center">
      
      <!-- Contenido -->
      <div>
        <h2 class="text-3xl lg:text-4xl font-bold text-gray-800 mb-6 font-poppins">
          Sobre GlamBook
        </h2>
        
        <div class="space-y-6">
          <p class="text-gray-600 font-poppins">
            Desde 2020, GlamBook ha sido el sal√≥n de belleza de confianza para cientos de clientas. 
            Nos especializamos en tratamientos de u√±as, maquillaje profesional y cuidado personal.
          </p>
          
          <div class="space-y-4">
            <div class="flex items-start space-x-3">
              <div class="bg-pink-100 p-2 rounded-lg">‚ú®</div>
              <div>
                <h3 class="font-semibold text-gray-800 font-poppins">Nuestra Misi√≥n</h3>
                <p class="text-gray-600 font-poppins">Realzar la belleza natural de cada cliente con t√©cnicas profesionales y productos de calidad.</p>
              </div>
            </div>
            
            <div class="flex items-start space-x-3">
              <div class="bg-purple-100 p-2 rounded-lg">üéØ</div>
              <div>
                <h3 class="font-semibold text-gray-800 font-poppins">Nuestra Visi√≥n</h3>
                <p class="text-gray-600 font-poppins">Ser el sal√≥n de belleza l√≠der, reconocido por la excelencia en el servicio y la satisfacci√≥n del cliente.</p>
              </div>
            </div>
            
            <div class="flex items-start space-x-3">
              <div class="bg-yellow-100 p-2 rounded-lg">üíé</div>
              <div>
                <h3 class="font-semibold text-gray-800 font-poppins">Nuestros Valores</h3>
                <p class="text-gray-600 font-poppins">Profesionalismo, calidad, innovaci√≥n y un trato personalizado para cada cliente.</p>
              </div>
            </div>
          </div>
        </div>
      </div>
      <!-- Estad√≠sticas -->
      <div class="bg-gradient-to-br from-pink-50 to-purple-50 rounded-lg p-8">
        <h3 class="text-2xl font-bold text-gray-800 mb-6 text-center font-poppins">Nuestros N√∫meros</h3>
        
        <div class="grid grid-cols-2 gap-6">
          <div class="text-center">
        <div class="text-3xl font-bold text-pink-500 font-poppins" data-target="500">0</div>
        <p class="text-gray-600 font-poppins">Clientas felices</p>
          </div>
          
          <div class="text-center">
        <div class="text-3xl font-bold text-purple-500 font-poppins" data-target="5">0</div>
        <p class="text-gray-600 font-poppins">A√±os de experiencia</p>
          </div>
          
          <div class="text-center">
        <div class="text-3xl font-bold text-yellow-500 font-poppins" data-target="1000">0</div>
        <p class="text-gray-600 font-poppins">Servicios realizados</p>
          </div>
          
          <div class="text-center">
        <div class="text-3xl font-bold text-green-500 font-poppins" data-target="98">0</div>
        <p class="text-gray-600 font-poppins">Satisfacci√≥n</p>
          </div>
        </div>
      </div>

      <script>
        function animateCounters() {
          const counters = document.querySelectorAll('[data-target]');
          
          const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const counter = entry.target;
            const target = parseInt(counter.getAttribute('data-target') || '0');
            const increment = target / 100;
            let count = 0;
            
            const timer = setInterval(() => {
          count += increment;
          if (count >= target) {
            counter.textContent = target + (target === 98 ? '%' : target === 1000 ? '+' : target === 500 ? '+' : '');
            clearInterval(timer);
          } else {
            counter.textContent = Math.ceil(count) + (target === 98 ? '%' : target === 1000 ? '+' : target === 500 ? '+' : '');
          }
            }, 20);
            
            observer.unobserve(counter);
          }
        });
          });
          
          counters.forEach(counter => observer.observe(counter));
        }
        
        document.addEventListener('DOMContentLoaded', animateCounters);
      </script>

    </div>
  </div>
</section>