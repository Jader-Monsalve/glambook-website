---
---

<div class="w-full max-w-5xl mx-auto p-2 sm:p-4">
  <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2 mb-4">
    <h1 class="text-3xl font-extrabold font-poppins text-pink-600 tracking-tight drop-shadow-sm">Gestión de Usuarios</h1>
    <a href="/admin" class="inline-flex items-center gap-2 px-4 py-2 bg-pink-100 hover:bg-pink-200 text-pink-700 font-semibold rounded-lg shadow transition-all border border-pink-200">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
        <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 12h16.5m-16.5 0l6.75-6.75M3.75 12l6.75 6.75" />
      </svg>
      Ir al Dashboard
    </a>
  </div>
  <div id="notification" class="hidden mb-4 p-4 rounded-lg font-poppins shadow-lg text-base"></div>
  <div class="flex flex-col sm:flex-row gap-3 mb-6">
    <input id="search-user" type="text" placeholder="Buscar por email o nombre" class="flex-1 px-4 py-2 border-2 border-pink-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-400 font-poppins text-gray-700 shadow-sm transition-all" />
    <button id="btn-create-user" class="bg-pink-500 hover:bg-pink-600 text-white font-bold px-6 py-2 rounded-lg shadow-md transition-all flex items-center gap-2">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
        <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15" />
      </svg>
      Crear Usuario
    </button>
  </div>
  <div id="users-list" class="bg-white rounded-xl shadow-lg p-2 sm:p-6 min-h-[200px] border border-pink-100 overflow-x-auto">
    <div class="text-center text-gray-400 font-poppins animate-pulse">Cargando usuarios...</div>
  </div>
</div>

<!-- Modal para crear usuario -->
<div id="modal-create-user" class="fixed inset-0 bg-black/40 items-center justify-center z-50 hidden">
  <div class="bg-white rounded-2xl p-8 w-full max-w-md shadow-2xl border border-pink-200 animate-fade-in">
    <h2 class="text-2xl font-extrabold mb-6 font-poppins text-pink-600">Crear Nuevo Usuario</h2>
    <form id="form-create-user" class="space-y-5">
      <div>
        <label for="new-user-email" class="block mb-1 font-semibold text-gray-700 font-poppins">Email</label>
        <input id="new-user-email" type="email" required placeholder="Email" class="w-full px-4 py-2 border-2 border-pink-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-400 font-poppins text-gray-700 shadow-sm transition-all" />
      </div>
      <div>
        <label for="new-user-password" class="block mb-1 font-semibold text-gray-700 font-poppins">Contraseña</label>
        <input id="new-user-password" type="password" required minlength="6" placeholder="Contraseña" class="w-full px-4 py-2 border-2 border-pink-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-400 font-poppins text-gray-700 shadow-sm transition-all" />
      </div>
      <div class="flex gap-3 justify-end pt-2">
        <button type="button" id="btn-cancel-create" class="px-5 py-2 rounded-lg border border-gray-300 text-gray-700 font-semibold hover:bg-gray-50 transition-colors font-poppins">Cancelar</button>
        <button type="submit" class="bg-pink-500 hover:bg-pink-600 text-white font-bold px-6 py-2 rounded-lg shadow-md transition-all font-poppins flex items-center gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
            <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15" />
          </svg>
          Crear
        </button>
      </div>
    </form>
  </div>
</div>

<script type="module">
import { initializeApp } from 'https://www.gstatic.com/firebasejs/9.23.0/firebase-app.js';
import { getAuth, createUserWithEmailAndPassword, onAuthStateChanged } from 'https://www.gstatic.com/firebasejs/9.23.0/firebase-auth.js';
import { getFirestore, collection, onSnapshot, query, orderBy } from 'https://www.gstatic.com/firebasejs/9.23.0/firebase-firestore.js';

const firebaseConfig = {
  apiKey: "AIzaSyA6ZaSPJZ9sz75fvYSy1GUL0uLpth5PURQ",
  authDomain: "glambook-ac3dd.firebaseapp.com",
  projectId: "glambook-ac3dd",
  storageBucket: "glambook-ac3dd.firebasestorage.app",
  messagingSenderId: "536181803335",
  appId: "1:536181803335:web:358a751de57699eab4a462",
  measurementId: "G-6C1YMQLCR5"
};

const app = initializeApp(firebaseConfig);
const auth = getAuth(app);
const db = getFirestore(app);

const usersList = document.getElementById('users-list');
const notification = document.getElementById('notification');
const modal = document.getElementById('modal-create-user');
const btnCreateUser = document.getElementById('btn-create-user');
const btnCancelCreate = document.getElementById('btn-cancel-create');
const formCreateUser = document.getElementById('form-create-user');

function showNotification(msg, type = 'info') {
  notification.textContent = msg;
  notification.className = `mb-4 p-3 rounded-lg font-poppins ${type === 'error' ? 'bg-red-100 text-red-700' : type === 'success' ? 'bg-green-100 text-green-700' : 'bg-blue-100 text-blue-700'}`;
  notification.classList.remove('hidden');
  setTimeout(() => notification.classList.add('hidden'), 4000);
}

function showModal() {
  modal.classList.remove('hidden');
  modal.classList.add('flex');
}
function hideModal() {
  modal.classList.remove('flex');
  modal.classList.add('hidden');
  formCreateUser.reset();
}

btnCreateUser.onclick = showModal;
btnCancelCreate.onclick = hideModal;

formCreateUser.onsubmit = async (e) => {
  e.preventDefault();
  const email = document.getElementById('new-user-email').value;
  const password = document.getElementById('new-user-password').value;
  try {
    await createUserWithEmailAndPassword(auth, email, password);
    showNotification('Usuario creado exitosamente', 'success');
    hideModal();
    // Opcional: recargar lista de usuarios
  } catch (error) {
    let msg = 'Error creando usuario';
    if (error.code === 'auth/email-already-in-use') msg = 'El email ya está registrado.';
    else if (error.code === 'auth/invalid-email') msg = 'El email no es válido.';
    else if (error.code === 'auth/weak-password') msg = 'La contraseña es muy débil.';
    showNotification(msg, 'error');
  }
};

// Solo muestra el botón de crear usuario si el admin está autenticado
onAuthStateChanged(auth, (user) => {
  if (!user) {
    window.location.href = '/login?redirect=admin/usuarios';
  }
});

// Listar usuarios en tiempo real desde Firestore
function renderUsers(users) {
  if (!users.length) {
    usersList.innerHTML = '<div class="text-center text-gray-400 font-poppins">No hay usuarios registrados.</div>';
    return;
  }
  usersList.innerHTML = `<div class="overflow-x-auto">
    <table class="w-full text-left font-poppins rounded-xl overflow-hidden shadow-md min-w-[600px]">
      <thead>
        <tr class="bg-pink-100 text-pink-700 border-b-2 border-pink-200">
          <th class="py-3 px-2 sm:px-4 font-bold">Usuario</th>
          <th class="py-3 px-2 sm:px-4 font-bold">Email</th>
          <th class="py-3 px-2 sm:px-4 font-bold">UID</th>
          <th class="py-3 px-2 sm:px-4 font-bold">Rol</th>
          <th class="py-3 px-2 sm:px-4 font-bold">Estado</th>
        </tr>
      </thead>
      <tbody>
        ${users.map(u => `
          <tr class="border-b hover:bg-pink-50 transition-colors">
            <td class="py-2 px-2 sm:px-4">
              <div class="flex items-center gap-2 sm:gap-3">
                <div class="w-8 h-8 sm:w-10 sm:h-10 rounded-full flex items-center justify-center font-bold text-base sm:text-lg text-white shadow-md"
                  style="background: linear-gradient(135deg, ${u.rol === 'admin' ? '#a78bfa,#f472b6' : '#38bdf8,#a7f3d0'});">
                  ${(u.nombre && u.nombre[0]) ? u.nombre[0].toUpperCase() : (u.email && u.email[0] ? u.email[0].toUpperCase() : '?')}
                </div>
                <div>
                  <div class="font-semibold text-gray-800 text-sm sm:text-base">${u.nombre || 'Sin nombre'}</div>
                  <div class="text-xs text-gray-500 hidden sm:block">${u.email}</div>
                </div>
              </div>
            </td>
            <td class="py-2 px-2 sm:px-4 text-xs sm:text-sm">${u.email}</td>
            <td class="py-2 px-2 sm:px-4 text-[10px] sm:text-xs text-gray-500">${u.uid}</td>
            <td class="py-2 px-2 sm:px-4">
              <span class="inline-flex items-center gap-1 px-2 sm:px-3 py-1 rounded-full text-xs font-semibold ${u.rol === 'admin' ? 'bg-purple-100 text-purple-700' : 'bg-blue-100 text-blue-700'}" title="${u.rol === 'admin' ? 'Administrador' : 'Usuario'}">
                ${u.rol === 'admin' ? `<svg xmlns='http://www.w3.org/2000/svg' class='w-4 h-4 mr-1' fill='none' viewBox='0 0 24 24' stroke='currentColor'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M11.049 2.927c.3-.921 1.603-.921 1.902 0l2.462 7.564a1 1 0 00.95.69h7.958c.969 0 1.371 1.24.588 1.81l-6.443 4.684a1 1 0 00-.364 1.118l2.462 7.564c.3.921-.755 1.688-1.54 1.118l-6.443-4.684a1 1 0 00-1.176 0l-6.443 4.684c-.784.57-1.838-.197-1.54-1.118l2.462-7.564a1 1 0 00-.364-1.118L2.049 12.99c-.783-.57-.38-1.81.588-1.81h7.958a1 1 0 00.95-.69l2.462-7.564z'/></svg>` : `<svg xmlns='http://www.w3.org/2000/svg' class='w-4 h-4 mr-1' fill='none' viewBox='0 0 24 24' stroke='currentColor'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5.121 17.804A13.937 13.937 0 0112 15c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0z' /></svg>`}
                ${u.rol === 'admin' ? 'Admin' : 'Usuario'}
              </span>
            </td>
            <td class="py-2 px-2 sm:px-4">
              <span class="inline-flex items-center gap-1 px-2 sm:px-3 py-1 rounded-full text-xs font-semibold ${u.activo ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'}" title="${u.activo ? 'Usuario activo' : 'Usuario inactivo'}">
                ${u.activo ? `<svg xmlns='http://www.w3.org/2000/svg' class='w-4 h-4' fill='none' viewBox='0 0 24 24' stroke='currentColor'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 13l4 4L19 7' /></svg>` : `<svg xmlns='http://www.w3.org/2000/svg' class='w-4 h-4' fill='none' viewBox='0 0 24 24' stroke='currentColor'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 18L18 6M6 6l12 12' /></svg>`}
                ${u.activo ? 'Activo' : 'Inactivo'}
              </span>
            </td>
          </tr>
        `).join('')}
    </table>
  </div>`;
}

function listenUsers() {
  const q = query(collection(db, 'usuarios'), orderBy('email'));
  onSnapshot(q, (snapshot) => {
    const users = [];
    snapshot.forEach(doc => {
      users.push({ uid: doc.id, ...doc.data() });
    });
    renderUsers(users);
  }, (error) => {
    usersList.innerHTML = '<div class="text-center text-red-500 font-poppins">Error cargando usuarios.</div>';
    showNotification('Error cargando usuarios', 'error');
  });
}

listenUsers();
</script>

<script type="module">
import { initializeApp } from 'https://www.gstatic.com/firebasejs/9.23.0/firebase-app.js';
import { getAuth, createUserWithEmailAndPassword, onAuthStateChanged } from 'https://www.gstatic.com/firebasejs/9.23.0/firebase-auth.js';
import { getFirestore, collection, onSnapshot, query, orderBy } from 'https://www.gstatic.com/firebasejs/9.23.0/firebase-firestore.js';

const firebaseConfig = {
  apiKey: "AIzaSyA6ZaSPJZ9sz75fvYSy1GUL0uLpth5PURQ",
  authDomain: "glambook-ac3dd.firebaseapp.com",
  projectId: "glambook-ac3dd",
  storageBucket: "glambook-ac3dd.firebasestorage.app",
  messagingSenderId: "536181803335",
  appId: "1:536181803335:web:358a751de57699eab4a462",
  measurementId: "G-6C1YMQLCR5"
};

const app = initializeApp(firebaseConfig);
const auth = getAuth(app);
const db = getFirestore(app);

const usersList = document.getElementById('users-list');
const notification = document.getElementById('notification');
const modal = document.getElementById('modal-create-user');
const btnCreateUser = document.getElementById('btn-create-user');
const btnCancelCreate = document.getElementById('btn-cancel-create');
const formCreateUser = document.getElementById('form-create-user');

function showNotification(msg, type = 'info') {
  notification.textContent = msg;
  notification.className = `mb-4 p-4 rounded-lg font-poppins shadow-lg text-base ` +
    (type === 'error' ? 'bg-red-100 text-red-700 border border-red-200' :
    type === 'success' ? 'bg-green-100 text-green-700 border border-green-200' :
    'bg-blue-100 text-blue-700 border border-blue-200');
  notification.classList.remove('hidden');
  notification.style.opacity = 1;
  setTimeout(() => {
    notification.style.opacity = 0.2;
    setTimeout(() => notification.classList.add('hidden'), 400);
  }, 3500);
}

function showModal() { modal.classList.remove('hidden'); }
function hideModal() { modal.classList.add('hidden'); formCreateUser.reset(); }

btnCreateUser.onclick = showModal;
btnCancelCreate.onclick = hideModal;

formCreateUser.onsubmit = async (e) => {
  e.preventDefault();
  const email = document.getElementById('new-user-email').value;
  const password = document.getElementById('new-user-password').value;
  try {
    await createUserWithEmailAndPassword(auth, email, password);
    showNotification('Usuario creado exitosamente', 'success');
    hideModal();
    // Opcional: recargar lista de usuarios
  } catch (error) {
    let msg = 'Error creando usuario';
    if (error.code === 'auth/email-already-in-use') msg = 'El email ya está registrado.';
    else if (error.code === 'auth/invalid-email') msg = 'El email no es válido.';
    else if (error.code === 'auth/weak-password') msg = 'La contraseña es muy débil.';
    showNotification(msg, 'error');
  }
};

// Solo muestra el botón de crear usuario si el admin está autenticado
onAuthStateChanged(auth, (user) => {
  if (!user) {
    window.location.href = '/login?redirect=admin/usuarios';
  }
});


// Listar usuarios en tiempo real desde Firestore
function renderUsers(users) {
  if (!users.length) {
    usersList.innerHTML = '<div class="text-center text-gray-400 font-poppins">No hay usuarios registrados.</div>';
    return;
  }
  usersList.innerHTML = `<table class="w-full text-left font-poppins">
    <thead>
      <tr class="border-b">
        <th class="py-2">Email</th>
        <th class="py-2">UID</th>
        <th class="py-2">Rol</th>
        <th class="py-2">Estado</th>
      </tr>
    </thead>
    <tbody>
      ${users.map(u => `
        <tr class="border-b hover:bg-pink-50">
          <td class="py-2">${u.email}</td>
          <td class="py-2 text-xs text-gray-500">${u.uid}</td>
          <td class="py-2">${u.rol || 'usuario'}</td>
          <td class="py-2">${u.activo ? 'Activo' : 'Inactivo'}</td>
        </tr>
      `).join('')}
    </tbody>
  </table>`;
}

function listenUsers() {
  const q = query(collection(db, 'usuarios'), orderBy('email'));
  onSnapshot(q, (snapshot) => {
    const users = [];
    snapshot.forEach(doc => {
      users.push({ uid: doc.id, ...doc.data() });
    });
    renderUsers(users);
  }, (error) => {
    usersList.innerHTML = '<div class="text-center text-red-500 font-poppins">Error cargando usuarios.</div>';
    showNotification('Error cargando usuarios', 'error');
  });
}

listenUsers();
</script>
