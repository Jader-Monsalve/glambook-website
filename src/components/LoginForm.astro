---
// Componente de login para administradores
---

<div id="login-form" class="max-w-md mx-auto bg-white rounded-lg shadow-lg p-6">
  <div class="text-center mb-6">
    <h2 class="text-2xl font-bold text-gray-800 font-poppins">Acceso Administrador</h2>
    <p class="text-gray-600 font-poppins">Inicia sesión para gestionar testimonios</p>
  </div>
  
  <form id="auth-form" class="space-y-4">
    <div>
      <label for="email" class="block text-sm font-medium text-gray-700 font-poppins mb-1">
        Email
      </label>
      <input
        type="email"
        id="email"
        name="email"
        required
        class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500 focus:border-transparent font-poppins"
        placeholder="admin@glambook.com"
      />
    </div>
    
    <div>
      <label for="password" class="block text-sm font-medium text-gray-700 font-poppins mb-1">
        Contraseña
      </label>
      <input
        type="password"
        id="password"
        name="password"
        required
        class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500 focus:border-transparent font-poppins"
        placeholder="••••••••"
      />
    </div>
    
    <div id="error-message" class="hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg font-poppins text-sm">
    </div>
    
    <button
      type="submit"
      id="login-btn"
      class="w-full bg-pink-500 hover:bg-pink-600 text-white font-bold py-3 px-4 rounded-lg transition-colors duration-300 font-poppins flex items-center justify-center gap-2"
    >
      <span id="login-text">Iniciar Sesión</span>
      <div id="login-spinner" class="hidden animate-spin rounded-full h-4 w-4 border-b-2 border-white"></div>
    </button>
  </form>
  
  <!-- Enlace para resetear contraseña -->
  <div class="mt-4 text-center">
    <button
      id="reset-password-btn"
      type="button"
      class="text-sm text-gray-600 hover:text-pink-600 font-poppins transition-colors duration-300"
    >
      ¿Olvidaste tu contraseña?
    </button>
  </div>
  
  <!-- Mensaje de éxito para reset de contraseña -->
  <div id="reset-success" class="hidden mt-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg font-poppins text-sm">
    Se ha enviado un enlace para resetear tu contraseña a tu email.
  </div>
</div>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap');
  
  .font-poppins {
    font-family: 'Poppins', sans-serif;
  }
</style>

<script>
  import { AuthService } from '../lib/authService';
  
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('auth-form') as HTMLFormElement;
    const emailInput = document.getElementById('email') as HTMLInputElement;
    const passwordInput = document.getElementById('password') as HTMLInputElement;
    const errorMessage = document.getElementById('error-message') as HTMLElement;
    const loginBtn = document.getElementById('login-btn') as HTMLButtonElement;
    const loginText = document.getElementById('login-text') as HTMLElement;
    const loginSpinner = document.getElementById('login-spinner') as HTMLElement;
    const resetPasswordBtn = document.getElementById('reset-password-btn') as HTMLButtonElement;
    const resetSuccess = document.getElementById('reset-success') as HTMLElement;
    
    if (!form) return;
    
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const email = emailInput.value.trim();
      const password = passwordInput.value;
      
      if (!email || !password) {
        showError('Por favor completa todos los campos');
        return;
      }
      
      try {
        // Mostrar loading
        setLoading(true);
        hideError();
        
        // Intentar iniciar sesión
        await AuthService.signIn(email, password);
        
        // Redirigir al panel admin
        window.location.href = '/admin';
        
      } catch (error: any) {
        setLoading(false);
        showError(error.message || 'Error al iniciar sesión');
      }
    });
    
    // Funcionalidad para resetear contraseña
    if (resetPasswordBtn) {
      resetPasswordBtn.addEventListener('click', async () => {
        const email = emailInput.value.trim();
        
        if (!email) {
          showError('Por favor ingresa tu email primero');
          emailInput.focus();
          return;
        }
        
        try {
          resetPasswordBtn.textContent = 'Enviando...';
          resetPasswordBtn.disabled = true;
          hideError();
          
          await AuthService.sendPasswordReset(email);
          
          // Mostrar mensaje de éxito
          if (resetSuccess) {
            resetSuccess.classList.remove('hidden');
          }
          
          // Ocultar después de 5 segundos
          setTimeout(() => {
            if (resetSuccess) {
              resetSuccess.classList.add('hidden');
            }
          }, 5000);
          
        } catch (error: any) {
          showError(error.message || 'Error al enviar email de recuperación');
        } finally {
          resetPasswordBtn.textContent = '¿Olvidaste tu contraseña?';
          resetPasswordBtn.disabled = false;
        }
      });
    }
    
    function showError(message: string) {
      if (errorMessage) {
        errorMessage.textContent = message;
        errorMessage.classList.remove('hidden');
      }
    }
    
    function hideError() {
      if (errorMessage) {
        errorMessage.classList.add('hidden');
      }
    }
    
    function setLoading(loading: boolean) {
      if (loading) {
        loginBtn.disabled = true;
        loginText.textContent = 'Iniciando sesión...';
        loginSpinner.classList.remove('hidden');
      } else {
        loginBtn.disabled = false;
        loginText.textContent = 'Iniciar Sesión';
        loginSpinner.classList.add('hidden');
      }
    }
  });
</script>