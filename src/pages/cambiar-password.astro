---
import Layout from '../layouts/Layout.astro';

// Configurar como server-rendered para que funcionen las APIs
export const prerender = false;
---

<Layout title="Cambiar Contrase√±a - Admin">
  <!-- Loading screen -->
  <div id="auth-loading" class="fixed inset-0 bg-gray-100 flex items-center justify-center z-50">
    <div class="text-center">
      <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-pink-500 mx-auto mb-4"></div>
      <p class="text-gray-600 font-poppins">Verificando acceso...</p>
    </div>
  </div>

  <!-- Login required screen -->
  <div id="login-required" class="fixed inset-0 bg-gray-100 items-center justify-center z-50 hidden">
    <div class="text-center max-w-md mx-auto p-6">
      <div class="text-6xl mb-4">üîí</div>
      <h2 class="text-2xl font-bold text-gray-800 mb-4 font-poppins">Acceso Restringido</h2>
      <p class="text-gray-600 mb-6 font-poppins">Necesitas iniciar sesi√≥n como administrador.</p>
      <a 
        href="/login" 
        class="bg-pink-500 hover:bg-pink-600 text-white px-6 py-3 rounded-lg font-poppins transition-colors duration-300 inline-block"
      >
        Iniciar Sesi√≥n
      </a>
    </div>
  </div>

  <!-- Change password content -->
  <main id="change-password-content" class="hidden min-h-screen bg-gray-50 py-12">
    <div class="max-w-md mx-auto px-4">
      
      <!-- Header -->
      <div class="text-center mb-8">
        <h1 class="text-3xl font-bold text-gray-800 mb-2 font-poppins">
          Cambiar Contrase√±a
        </h1>
        <p class="text-gray-600 font-poppins">
          Actualiza tu contrase√±a de administrador
        </p>
        <p id="admin-info" class="text-sm text-gray-500 font-poppins mt-2">
          <!-- Info del admin -->
        </p>
      </div>

      <!-- Formulario de cambio de contrase√±a -->
      <div class="bg-white rounded-lg shadow-lg p-6">
        <form id="change-password-form" class="space-y-4">
          <div>
            <label for="current-password" class="block text-sm font-medium text-gray-700 font-poppins mb-1">
              Contrase√±a Actual
            </label>
            <input
              type="password"
              id="current-password"
              name="currentPassword"
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500 focus:border-transparent font-poppins"
              placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
            />
          </div>
          
          <div>
            <label for="new-password" class="block text-sm font-medium text-gray-700 font-poppins mb-1">
              Nueva Contrase√±a
            </label>
            <input
              type="password"
              id="new-password"
              name="newPassword"
              required
              minlength="6"
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500 focus:border-transparent font-poppins"
              placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
            />
            <p class="text-xs text-gray-500 mt-1 font-poppins">M√≠nimo 6 caracteres</p>
          </div>
          
          <div>
            <label for="confirm-password" class="block text-sm font-medium text-gray-700 font-poppins mb-1">
              Confirmar Nueva Contrase√±a
            </label>
            <input
              type="password"
              id="confirm-password"
              name="confirmPassword"
              required
              minlength="6"
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500 focus:border-transparent font-poppins"
              placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
            />
          </div>
          
          <div id="error-message" class="hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg font-poppins text-sm">
          </div>
          
          <div id="success-message" class="hidden bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg font-poppins text-sm">
            Contrase√±a cambiada exitosamente
          </div>
          
          <button
            type="submit"
            id="change-btn"
            class="w-full bg-pink-500 hover:bg-pink-600 text-white font-bold py-3 px-4 rounded-lg transition-colors duration-300 font-poppins flex items-center justify-center gap-2"
          >
            <span id="change-text">Cambiar Contrase√±a</span>
            <div id="change-spinner" class="hidden animate-spin rounded-full h-4 w-4 border-b-2 border-white"></div>
          </button>
        </form>
        
        <!-- Enlaces -->
        <div class="mt-6 text-center space-y-3">
          <a 
            href="/admin"
            class="inline-flex items-center gap-2 text-gray-600 hover:text-pink-600 text-sm font-poppins transition-colors duration-300"
          >
            ‚Üê Volver al Panel Admin
          </a>
          
          <div class="pt-3 border-t border-gray-200">
            <button 
              id="logout-btn"
              class="text-red-600 hover:text-red-700 text-sm font-poppins transition-colors duration-300"
            >
              Cerrar Sesi√≥n
            </button>
          </div>
        </div>
      </div>
    </div>
  </main>

  <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap');
    
    .font-poppins {
      font-family: 'Poppins', sans-serif;
    }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', async () => {
      await checkAuthentication();
    });

    // Verificar autenticaci√≥n
    async function checkAuthentication() {
      try {
        const { AuthService } = await import('../lib/authService');
        const user = await AuthService.getCurrentUser();
        
        if (user) {
          showChangePasswordForm(user);
        } else {
          showLoginRequired();
        }
      } catch (error) {
        console.error('Error verificando autenticaci√≥n:', error);
        showLoginRequired();
      }
    }

    // Mostrar formulario de cambio de contrase√±a
    function showChangePasswordForm(user: any) {
      const authLoading = document.getElementById('auth-loading');
      const loginRequired = document.getElementById('login-required');
      const changePasswordContent = document.getElementById('change-password-content');
      const adminInfo = document.getElementById('admin-info');
      const form = document.getElementById('change-password-form') as HTMLFormElement;
      const logoutBtn = document.getElementById('logout-btn');

      // Mostrar contenido
      if (authLoading) authLoading.classList.add('hidden');
      if (loginRequired) loginRequired.classList.add('hidden');
      if (changePasswordContent) changePasswordContent.classList.remove('hidden');
      
      // Mostrar info del admin
      if (adminInfo) {
        adminInfo.textContent = `Administrador: ${user.email}`;
      }

      // Configurar formulario
      if (form) {
        form.addEventListener('submit', handlePasswordChange);
      }

      // Configurar logout
      if (logoutBtn) {
        logoutBtn.addEventListener('click', handleLogout);
      }
    }

    // Mostrar pantalla de login requerido
    function showLoginRequired() {
      const authLoading = document.getElementById('auth-loading');
      const loginRequired = document.getElementById('login-required');
      const changePasswordContent = document.getElementById('change-password-content');

      if (authLoading) authLoading.classList.add('hidden');
      if (changePasswordContent) changePasswordContent.classList.add('hidden');
      if (loginRequired) {
        loginRequired.classList.remove('hidden');
        loginRequired.classList.add('flex');
      }
    }

    // Manejar cambio de contrase√±a
    async function handlePasswordChange(e: Event) {
      e.preventDefault();
      
      const form = e.target as HTMLFormElement;
      const formData = new FormData(form);
      const newPassword = formData.get('newPassword') as string;
      const confirmPassword = formData.get('confirmPassword') as string;
      
      // Validar contrase√±as
      if (newPassword !== confirmPassword) {
        showError('Las contrase√±as no coinciden');
        return;
      }
      
      if (newPassword.length < 6) {
        showError('La contrase√±a debe tener al menos 6 caracteres');
        return;
      }
      
      try {
        setLoading(true);
        hideMessages();
        
        const { AuthService } = await import('../lib/authService');
        await AuthService.changePassword(newPassword);
        
        showSuccess('Contrase√±a cambiada exitosamente');
        form.reset();
        
      } catch (error: any) {
        showError(error.message || 'Error al cambiar contrase√±a');
      } finally {
        setLoading(false);
      }
    }

    // Manejar logout
    async function handleLogout() {
      try {
        const { AuthService } = await import('../lib/authService');
        await AuthService.signOut();
        window.location.href = '/login';
      } catch (error) {
        console.error('Error al cerrar sesi√≥n:', error);
        window.location.href = '/login';
      }
    }

    // Funciones de UI
    function showError(message: string) {
      const errorMessage = document.getElementById('error-message');
      if (errorMessage) {
        errorMessage.textContent = message;
        errorMessage.classList.remove('hidden');
      }
    }

    function showSuccess(message: string) {
      const successMessage = document.getElementById('success-message');
      if (successMessage) {
        successMessage.classList.remove('hidden');
        setTimeout(() => {
          successMessage.classList.add('hidden');
        }, 5000);
      }
    }

    function hideMessages() {
      const errorMessage = document.getElementById('error-message');
      const successMessage = document.getElementById('success-message');
      if (errorMessage) errorMessage.classList.add('hidden');
      if (successMessage) successMessage.classList.add('hidden');
    }

    function setLoading(loading: boolean) {
      const changeBtn = document.getElementById('change-btn') as HTMLButtonElement;
      const changeText = document.getElementById('change-text');
      const changeSpinner = document.getElementById('change-spinner');
      
      if (loading) {
        changeBtn.disabled = true;
        if (changeText) changeText.textContent = 'Cambiando...';
        if (changeSpinner) changeSpinner.classList.remove('hidden');
      } else {
        changeBtn.disabled = false;
        if (changeText) changeText.textContent = 'Cambiar Contrase√±a';
        if (changeSpinner) changeSpinner.classList.add('hidden');
      }
    }
  </script>
</Layout>