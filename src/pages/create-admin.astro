---
import Layout from '../layouts/Layout.astro';
export const prerender = false;

const title = "Crear Admin - GlamBook";
---

<Layout title={title}>
  <div class="min-h-screen flex items-center justify-center bg-gradient-to-br from-pink-50 to-purple-50 px-4">
    <div class="max-w-md w-full bg-white rounded-lg shadow-xl p-8">
      <div class="text-center mb-8">
        <h1 class="text-3xl font-bold text-gray-800 font-poppins">Crear Admin</h1>
        <p class="text-gray-600 mt-2 font-poppins">Registra una cuenta de administrador</p>
      </div>

      <form id="create-admin-form" class="space-y-6">
        <div>
          <label for="email" class="block text-sm font-medium text-gray-700 font-poppins">Email</label>
          <input 
            type="email" 
            id="email" 
            required 
            class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-pink-500 focus:border-pink-500 font-poppins"
            placeholder="admin@glambook.com"
          >
        </div>

        <div>
          <label for="password" class="block text-sm font-medium text-gray-700 font-poppins">Contraseña</label>
          <input 
            type="password" 
            id="password" 
            required 
            class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-pink-500 focus:border-pink-500 font-poppins"
            placeholder="••••••••"
            minlength="6"
          >
        </div>

        <div>
          <label for="confirm-password" class="block text-sm font-medium text-gray-700 font-poppins">Confirmar Contraseña</label>
          <input 
            type="password" 
            id="confirm-password" 
            required 
            class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-pink-500 focus:border-pink-500 font-poppins"
            placeholder="••••••••"
            minlength="6"
          >
        </div>

        <div id="message" class="hidden p-3 rounded-md">
          <p class="text-sm font-poppins"></p>
        </div>

        <button 
          type="submit" 
          class="w-full bg-pink-500 hover:bg-pink-600 text-white py-2 px-4 rounded-md font-semibold font-poppins transition-colors duration-300 disabled:opacity-50"
          id="create-btn"
        >
          Crear Administrador
        </button>
      </form>

      <div class="mt-6 text-center">
        <a href="/admin" class="text-pink-600 hover:text-pink-800 font-poppins">Ir al panel de administración</a>
      </div>
    </div>
  </div>
</Layout>

<script>
import { initializeApp } from 'firebase/app';
import { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';

// Firebase configuration
const firebaseConfig = {
  apiKey: "AIzaSyA6ZaSPJZ9sz75fvYSy1GUL0uLpth5PURQ",
  authDomain: "glambook-ac3dd.firebaseapp.com",
  projectId: "glambook-ac3dd",
  storageBucket: "glambook-ac3dd.firebasestorage.app",
  messagingSenderId: "536181803335",
  appId: "1:536181803335:web:358a751de57699eab4a462",
  measurementId: "G-6C1YMQLCR5"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
const auth = getAuth(app);

// DOM Elements
const form = document.getElementById('create-admin-form');
const message = document.getElementById('message');
const createBtn = document.getElementById('create-btn');

function getCreateBtn() {
  return createBtn as HTMLButtonElement;
}

form.addEventListener('submit', async (e) => {
  e.preventDefault();
  
  const email = (document.getElementById('email') as HTMLInputElement).value;
  const password = (document.getElementById('password') as HTMLInputElement).value;
  const confirmPassword = (document.getElementById('confirm-password') as HTMLInputElement).value;
  
  // Validate passwords match
  if (password !== confirmPassword) {
    showMessage('Las contraseñas no coinciden', 'error');
    return;
  }
  
  try {
  getCreateBtn().disabled = true;
  getCreateBtn().textContent = 'Creando...';
    
    const userCredential = await createUserWithEmailAndPassword(auth, email, password);
    
    showMessage('¡Administrador creado exitosamente! Puedes iniciar sesión ahora.', 'success');
    
    // Clear form
  (form as HTMLFormElement).reset();
    
    // Redirect after 2 seconds
    setTimeout(() => {
      window.location.href = '/admin';
    }, 2000);
    
  } catch (error) {
    console.error('Error creando administrador:', error);
    let errorMessage = 'Error creando administrador';
    // Firebase error codes
    if (error && typeof error === 'object') {
      switch (error.code) {
        case 'auth/email-already-in-use':
          errorMessage = 'Este email ya está registrado.';
          break;
        case 'auth/weak-password':
          errorMessage = 'La contraseña debe tener al menos 6 caracteres.';
          break;
        case 'auth/invalid-email':
          errorMessage = 'El email ingresado no es válido.';
          break;
        case 'auth/network-request-failed':
          errorMessage = 'Error de red. Verifica tu conexión a internet.';
          break;
        case 'auth/too-many-requests':
          errorMessage = 'Demasiados intentos. Intenta de nuevo más tarde.';
          break;
        default:
          if (error.message) {
            errorMessage = error.message;
          }
      }
    }
    showMessage(errorMessage, 'error');
  } finally {
  getCreateBtn().disabled = false;
  getCreateBtn().textContent = 'Crear Administrador';
  }
});

function showMessage(text, type) {
  message.classList.remove('hidden', 'bg-red-50', 'border-red-200', 'bg-green-50', 'border-green-200');
  message.querySelector('p').classList.remove('text-red-600', 'text-green-600');
  
  if (type === 'error') {
    message.classList.add('bg-red-50', 'border-red-200');
    message.querySelector('p').classList.add('text-red-600');
  } else {
    message.classList.add('bg-green-50', 'border-green-200');
    message.querySelector('p').classList.add('text-green-600');
  }
  
  message.classList.add('border');
  message.querySelector('p').textContent = text;
}
</script>